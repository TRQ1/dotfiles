snippet tm "template"
package main

import (
	"fmt"
)

func main() {
	fmt.Print("hello world")
	${1}
}
endsnippet

snippet im "import"
import "${1:lib}"
endsnippet

snippet fori "for i :=0; i < count; i ++ { ... }"
for ${1:i} := 0; $1 < ${2:count}; $1{3:++} {
}
endsnippet

snippet fun "func name( ... ) error { ... }"
func ${1:funName}(${2}) ${3:error} {
	${4}
}
endsnippet

snippet if "if con { ... }"
if ${1} {
	${2}
}
endsnippet

snippet cons "const( ... )"
const(
	${1:variable}	${2:type} = ${3:value}
)
endsnippet

snippet conc "const( Sundy	= 0 ... )"
const(
	${1:variable}		= ${2:value}
	${3:variable}		= ${4:value}
)
endsnippet

snippet iota  "Description"
const(
	${1:variable}		= iota
)
endsnippet

snippet stru "type struct { ... }"
type ${1} struct {
	${2:string}	${3:type}
}
endsnippet

snippet test "func TEST(t *testing.T) { t.Run() { }) }" 
func ${1:TEST_NAME}(t *testing.T) {
	t.Run("${2:message}, func(t *testing.T) {
	})
}
endsnippet

snippet ifel "if { ... } else { .. }"
if ${1:/* condition */} {
  ${2:${VISUAL}}
} else {
  ${0}
}
endsnippet


